---
# tasks file for nginx-role
- name: Set up the CA
  block:
    - name: create nginx repo definition
      copy:
        src: nginx.repo
        dest: /etc/yum.repos.d/nginx.repo
        owner: root
        group: root
        mode: 0644

    - name: install nginx
      yum:
        name: nginx
        update_cache: true
        state: present

    - name: check file exists
      connection: local
      stat: 
        path: "{{ playbook_dir }}/etc/certs/server.rsa"
      register: file_data

    - name: copy certs files
      copy:
        src: etc/certs
        dest: /etc/nginx
        owner: root
        group: root
        mode: 0644
      when: file_data.stat.exists

    - name: copy main nginx config file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy site's nginx config file
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/conf.d/notls.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: copy site's nginx ssl config file
      template:
        src: templates/nginx_ssl.conf.j2
        dest: /etc/nginx/conf.d/ssl.conf
        owner: root
        group: root
        mode: 0644
      notify: restart nginx
      when: file_data.stat.exists

    - name: copy index.html
      template:
        src: templates/index.html.j2
        dest: /usr/share/nginx/html/index.html
        owner: root
        group: root
        mode: 0644
      notify: restart nginx

    - name: ensure nginx is enabled and started
      service:
        name: nginx
        state: started
        enabled: true

    - name: install firewalld
      yum:
        name: firewalld
        update_cache: true
        state: present

    - name: ensure firewalld is enabled and started
      service:
        name: firewalld
        state: started
        enabled: true

    - name: install python-firewall
      yum:
        name: python-firewall
        update_cache: true
        state: present

    - name: insert firewalld rule for nginx
      firewalld:
        port: "{{ nginx_port_no_tls }}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true

    - name: insert firewalld rule for nginx
      firewalld:
        port: "{{nginx_port_tls}}/tcp"
        permanent: true
        state: enabled
        immediate: true
      ignore_errors: true
      when: file_data.stat.exists

    - name: check web site from control server
      uri:
        url: "http://{{ ansible_host }}:{{ nginx_port_no_tls }}"
        return_content: true
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200
  
    - name: restart enginx
      service:
        name: nginx
        state: restarted

    - name: check web site from control server tls
      uri:
        url: "https://{{ ansible_host }}:{{nginx_port_tls}}"
        return_content: true
        validate_certs: no
      connection: local
      register: example_webpage_out
      failed_when: example_webpage_out.status != 200
      when: file_data.stat.exists
  become: true
  tags:
    - nginx